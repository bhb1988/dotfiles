snippet :f
options head
  ${1:#:method_name}: function(${2:#:attribute}) {
    ${0:TARGET}
  }

snippet function
abbr    func
options word
  function ${1:#:function_name}(${2:#:argument}) {
    ${0:TARGET}
  }

snippet function2
abbr    func2
options head
  function ${1:function_name}(${2:argument}) {
    ${0:TARGET}
  }

snippet proto
options head
  ${1:#:class_name}.prototype.${2:#:method_name} = function(${3:#:first_argument}) {
    ${0:TARGET}
  };


snippet f
options word
  function(${1}) { ${0:TARGET} };

snippet if
options head
  if (${1:true}) {
    ${0:TARGET}
  }

snippet if-else
abbr ife
options head
  if (${1:#:condition}) {
    ${0:TARGET}
  } else {
  }

snippet for
options head
  for (var ${1:i}=0; $1 < ${2:#:Things}.length; ++$1) {
    ${0:TARGET}
  }

snippet forin
options head
  for (var ${1:i} in ${2:#:Things}) {
    ${0:TARGET}
  }

snippet while
options head
  while (${1:true}) {
    ${0:TARGET}
  }

snippet switch
options head
  switch (${1:#:var}) {
    case ${2:#:val}:
      ${0:TARGET}
      break;
  }

snippet try
options head
  try {
    ${0:TARGET}
  } catch (${1:e}) {
    ${2:TARGET}
  }

snippet try_finally
options head
  try {
    ${0:TARGET}
  } catch (${1:e}) {
    ${2}
  } finally {
    ${3}
  }


snippet key-value
abbr :,
options word
  ${1:#:value_name}: ${0:#:value},

#snippet key
#options word
#  ${1:#:key}: "${2:#:value}"}${3:, }

snippet setTimeout-function
options head
  setTimeout(function() { ${0} }, ${1:10});

snippet console-log
alias cl
options head
  console.log(${0:TARGET});

snippet console-trace
alias ct
options head
  console.trace();

snippet console-error
alias ce
options head
  console.error(${0:TARGET});

snippet console-warn
alias cw
options head
  console.warn(${0:TARGET});

snippet console-info
alias ci
options head
  console.info(${0:TARGET});

snippet iife
options head
  (function(${1}) {
    'use strict';
    ${0:TARGET}
  })(${2});


snippet     property
abbr        property var
    property var ${1:#:name}: ${2:#:0}
    ${0}

snippet     rect
abbr        Rectangle {}
    Rectangle {
        id: ${1:rootItem};
        ${0}
    }

snippet anchor
abbr    anchors {}
    anchors {
        ${0}
    }

snippet txt
abbr    Text {}
    Text {
        id: ${1:helloTxt};
        text: "${2:#:Test test}";
        ${0}
    }

snippet func
abbr    function {}
    function ${1:func_name}(${2:param}) {
        ${0}
    }

snippet imquick
abbr    import QtQuick
    import QtQuick 2.4
    ${0}

snippet imcontrol
abbr    import Controls
    import QtQuick.Controls 1.4
    ${0}

snippet     imlayout
abbr        import layouts
    import QtQuick.Layouts 1.3
    ${0}

snippet     imstyle
abbr        import styles
    import QtQuick.Controls.Styles 1.4
    ${0}

snippet lrow
abbr Row
    Row {
        ${1}
        spacing: ${2:#:4};
        ${0}
    }

snippet lcol
abbr    Column
    Column {
        ${1}
        spacing: ${2:#:4};
        ${0}
    }

snippet lgrid
abbr Grid{}
    Grid {
        ${1}
        rows: ${2:#:3};
        columns: ${3:#:3};
        rowSpacing: ${4:#:4};
        columnSpacing: ${5:#:4};
        flow: Grid.${6:#:LeftToRight};

        ${0}
    }

snippet lflow
abbr    Flow {}
    Flow {
        ${1}
        spacing: ${2:#:3};
        flow: Flow.${3:#:LeftToRight};

        ${0}
    }

snippet     gridlayout
abbr        GridLayout{}
    GridLayout {
        ${1}
        rows: ${2:#:3};
        columns: ${3:#:4};
        rowSpacing: ${4:#:4};
        columnSpacing: ${5:#:4};
        flow: GridLayout.${6:#:TopToBottom};

        ${0}
    }

snippet     rowlayout
abbr        RowLayout{}
    RowLayout {
        ${1}
        spacing: ${2:#:4};

        ${0}
    }

snippet     groupbox
abbr        GroupBox{}
    GroupBox {
        ${0}
    }
